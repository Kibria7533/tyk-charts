# Default values for tyk-bootstrap.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
global:
  license:
    dashboard: ""
  tls:
    # If set to true the Dashboard will use SSL connection.
    # You will also need to set the:
    # - TYK_DB_SERVEROPTIONS_CERTIFICATE_CERTFILE
    # - TYK_DB_SERVEROPTIONS_CERTIFICATE_KEYFILE
    # variables in extraEnvs object array to define your SSL cert and key files.
    dashboard: false
    # When true, sets the gateway protocol to HTTPS.
    gateway: false
  redis:
    # The addrs value will allow you to set your Redis addresses. If you are
    # using a redis cluster, you can list the endpoints of the redis instances
    # or use the cluster configuration endpoint.
    # Default value: redis.{{ .Release.Namespace }}.svc.cluster.local:6379
    addrs:
      #   - redis.tyk.svc.cluster.local:6379
      #   This is the DNS name of the redis as set when using Bitnami
      #   - "tyk-redis-master.tyk.svc.cluster.local:6379"


    # Redis password
    # If you're using Bitnami Redis chart please input your password in the field below
    pass: ""

    # Enables SSL for Redis connection. Redis instance will have to support that.
    # Default value: false
    # useSSL: true

    # The enableCluster value will allow you to indicate to Tyk whether you are
    # running a Redis cluster or not.
    # Default value: false
    # enableCluster: true

    # By default the database index is 0. Setting the database index is not
    # supported with redis cluster. As such, if you have enableCluster: true,
    # then this value should be omitted or explicitly set to 0.
    storage:
      database: 0

  mongo:
    # The mongoURL value will allow you to set your MongoDB address.
    # Default value: mongodb://mongo.{{ .Release.Namespace }}.svc.cluster.local:27017/tyk_analytics
    # mongoURL: mongodb://mongo.tyk.svc.cluster.local:27017/tyk_analytics

    # If your MongoDB has a password you can add the username and password to the url
    mongoURL: ""

    # Enables SSL for MongoDB connection. MongoDB instance will have to support that.
    # Default value: false
    useSSL: false

  # Postgres connection string parameters.
  postgres:
    host: tyk-postgres-postgresql.tyk.svc.cluster.local
    port: 5432
    user: postgres
    password:
    database: tyk_analytics
    sslmode:

  # Choose the backend for Tyk. [ "mongo", "postgres" ]
  backend: mongo
  
bootstrap:
  dashboard:
    enabled: true
    deploymentName: dashboard-tyk-dashboard
    service:
      port: 3000
  portal:
    enabled: true
  gateway:
    deploymentName: gateway-tyk-gateway
    service:
      port: 8080

  jobs:
    bootstrapJobName: bootstrap-post-install

  adminUser:
    firstName: admin
    lastName: user
    email: default@example.com
    # Set a password or a random one will be assigned.
    password: "123456"

  org:
    name: Default Org
    # The hostname to bind the Portal to.
    cname: tyk-portal.local

  secrets:
    AdminSecret: "12345"

  operatorSecret: true

  enterprisePortalSecret: true

  fullnameOverride: ""
  nameOverride: ""

